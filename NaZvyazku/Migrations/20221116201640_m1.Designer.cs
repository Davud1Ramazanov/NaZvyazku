// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaZvyazku.Models;

#nullable disable

namespace NaZvyazku.Migrations
{
    [DbContext(typeof(db_a8ec2f_zvyazok001Context))]
    [Migration("20221116201640_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NaZvyazku.Models.Authorization", b =>
                {
                    b.Property<int>("AuthorizationId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorizationID");

                    b.Property<int?>("CreditCardId")
                        .HasColumnType("int")
                        .HasColumnName("CreditCardID");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FullName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Password")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("PhoneNumberId")
                        .HasColumnType("int")
                        .HasColumnName("PhoneNumberID");

                    b.HasKey("AuthorizationId")
                        .HasName("PK__Authoriz__09019C379427AB51");

                    b.HasIndex("CreditCardId");

                    b.HasIndex("PhoneNumberId");

                    b.ToTable("Authorization", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.CreditCard", b =>
                {
                    b.Property<int>("CreditCardId")
                        .HasColumnType("int")
                        .HasColumnName("CreditCardID");

                    b.Property<int?>("CardNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Cvv")
                        .HasColumnType("int")
                        .HasColumnName("CVV");

                    b.Property<int?>("DateCard")
                        .HasColumnType("int");

                    b.HasKey("CreditCardId");

                    b.ToTable("CreditCard", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.Info", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateReg")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FullName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Subscription")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tariff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TARIFF");

                    b.HasKey("UserId")
                        .HasName("PK__INFO__1788CCAC4DB20A25");

                    b.ToTable("INFO", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.PersonalArea", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("image");

                    b.Property<int?>("Cash")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateReg")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Gigabyte")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int")
                        .HasColumnName("SubscriptionID");

                    b.Property<int?>("TariffId")
                        .HasColumnType("int")
                        .HasColumnName("TariffID");

                    b.HasKey("UserId")
                        .HasName("PK__Personal__1788CCAC9C9AA6FC");

                    b.ToTable("PersonalArea", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.PhoneNumber", b =>
                {
                    b.Property<int>("PhoneNumberId")
                        .HasColumnType("int")
                        .HasColumnName("PhoneNumberID");

                    b.Property<int?>("PhoneNum")
                        .HasColumnType("int");

                    b.HasKey("PhoneNumberId");

                    b.ToTable("PhoneNumber", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.Role", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int")
                        .HasColumnName("RolesID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Roles")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("RolesId")
                        .HasName("PK__Role__C4B27820267AFAAF");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.Subscription", b =>
                {
                    b.Property<int?>("Calls")
                        .HasColumnType("int");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<int?>("Gigabyte")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Notes")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int")
                        .HasColumnName("SubscriptionID");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.Tariff", b =>
                {
                    b.Property<int?>("Calls")
                        .HasColumnType("int");

                    b.Property<string>("Device")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Gigabyte")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Notes")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("TariffId")
                        .HasColumnType("int")
                        .HasColumnName("TariffID");

                    b.ToTable("TARIFF", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int?>("AuthorizationId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorizationID");

                    b.Property<DateTime?>("DateReg")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId")
                        .HasName("PK__USER__1788CCAC85EA8372");

                    b.HasIndex("AuthorizationId");

                    b.HasIndex("RoleId");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("NaZvyazku.Models.Authorization", b =>
                {
                    b.HasOne("NaZvyazku.Models.CreditCard", "CreditCard")
                        .WithMany("Authorizations")
                        .HasForeignKey("CreditCardId")
                        .HasConstraintName("FK__Authoriza__Credi__5AEE82B9");

                    b.HasOne("NaZvyazku.Models.PhoneNumber", "PhoneNumber")
                        .WithMany("Authorizations")
                        .HasForeignKey("PhoneNumberId")
                        .HasConstraintName("FK__Authoriza__Phone__59FA5E80");

                    b.Navigation("CreditCard");

                    b.Navigation("PhoneNumber");
                });

            modelBuilder.Entity("NaZvyazku.Models.User", b =>
                {
                    b.HasOne("NaZvyazku.Models.Authorization", "Authorization")
                        .WithMany("Users")
                        .HasForeignKey("AuthorizationId")
                        .HasConstraintName("FK__USER__Authorizat__5FB337D6");

                    b.HasOne("NaZvyazku.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__USER__RoleID__5EBF139D");

                    b.HasOne("NaZvyazku.Models.Info", "UserNavigation")
                        .WithOne("User")
                        .HasForeignKey("NaZvyazku.Models.User", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__USER__UserID__60A75C0F");

                    b.HasOne("NaZvyazku.Models.PersonalArea", "User1")
                        .WithOne("User")
                        .HasForeignKey("NaZvyazku.Models.User", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__USER__UserID__5DCAEF64");

                    b.Navigation("Authorization");

                    b.Navigation("Role");

                    b.Navigation("User1");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("NaZvyazku.Models.Authorization", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NaZvyazku.Models.CreditCard", b =>
                {
                    b.Navigation("Authorizations");
                });

            modelBuilder.Entity("NaZvyazku.Models.Info", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("NaZvyazku.Models.PersonalArea", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("NaZvyazku.Models.PhoneNumber", b =>
                {
                    b.Navigation("Authorizations");
                });

            modelBuilder.Entity("NaZvyazku.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
